---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: releases.foundry.projectcatalyst.io
spec:
  group: foundry.projectcatalyst.io
  names:
    kind: Release
    listKind: ReleaseList
    plural: releases
    singular: release
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Release is the Schema for the releases API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ReleaseSpec defines the desired state of Release.
            properties:
              bundle:
                description: |-
                  Bundle is the module bundle used to generate the deployment manifests.
                  This field must be a valid module bundle as defined in the Catalyst Forge schema.
                  See: https://github.com/input-output-hk/catalyst-forge/blob/master/lib/schema/blueprint/project/deployment.cue
                x-kubernetes-preserve-unknown-fields: true
            required:
            - bundle
            type: object
          status:
            description: ReleaseStatus defines the observed state of Release.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
