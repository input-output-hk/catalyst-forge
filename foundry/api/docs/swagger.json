{
    "swagger": "2.0",
    "info": {
        "description": "API for managing releases and deployments in the Catalyst Foundry system.",
        "title": "Catalyst Foundry API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:5050",
    "basePath": "/",
    "paths": {
        "/gha/auth": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all GitHub Actions authentication configurations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gha"
                ],
                "summary": "List GHA authentication configurations",
                "responses": {
                    "200": {
                        "description": "List of authentication configurations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.GHARepositoryAuthResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new GitHub Actions authentication configuration for a repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gha"
                ],
                "summary": "Create GHA authentication configuration",
                "parameters": [
                    {
                        "description": "GHA authentication configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAuthRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Authentication configuration created",
                        "schema": {
                            "$ref": "#/definitions/handlers.GHARepositoryAuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/gha/auth/repository/{repository}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a GitHub Actions authentication configuration by repository name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gha"
                ],
                "summary": "Get GHA authentication configuration by repository",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository name",
                        "name": "repository",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication configuration",
                        "schema": {
                            "$ref": "#/definitions/handlers.GHARepositoryAuthResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Authentication configuration not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/gha/auth/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a specific GitHub Actions authentication configuration by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gha"
                ],
                "summary": "Get GHA authentication configuration by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Authentication configuration ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication configuration",
                        "schema": {
                            "$ref": "#/definitions/handlers.GHARepositoryAuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Authentication configuration not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing GitHub Actions authentication configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gha"
                ],
                "summary": "Update GHA authentication configuration",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Authentication configuration ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated GHA authentication configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateAuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication configuration updated",
                        "schema": {
                            "$ref": "#/definitions/handlers.GHARepositoryAuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Authentication configuration not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a GitHub Actions authentication configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gha"
                ],
                "summary": "Delete GHA authentication configuration",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Authentication configuration ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication configuration deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/gha/validate": {
            "post": {
                "description": "Validate a GitHub Actions OIDC token and return a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gha"
                ],
                "summary": "Validate GitHub Actions token",
                "parameters": [
                    {
                        "description": "Token validation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ValidateTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token validated successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.ValidateTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Repository not authorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "description": "Check the health status of the API service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Service is unhealthy",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/release": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new release with the specified source repository and project details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "releases"
                ],
                "summary": "Create a new release",
                "parameters": [
                    {
                        "description": "Release creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateReleaseRequest"
                        }
                    },
                    {
                        "enum": [
                            "true",
                            "false",
                            "1",
                            "0"
                        ],
                        "type": "string",
                        "description": "Deploy the release immediately",
                        "name": "deploy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Release created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Release"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/release/alias/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a release by its alias name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "releases"
                ],
                "summary": "Get release by alias",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Release alias name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Release details",
                        "schema": {
                            "$ref": "#/definitions/models.Release"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Release alias not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create an alias for a release",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "releases"
                ],
                "summary": "Create a release alias",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Alias name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Alias creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAliasRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Alias created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an alias for a release",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "releases"
                ],
                "summary": "Delete a release alias",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Alias name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alias deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/release/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific release by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "releases"
                ],
                "summary": "Get a release by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Release ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Release details",
                        "schema": {
                            "$ref": "#/definitions/models.Release"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Release not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing release with new information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "releases"
                ],
                "summary": "Update a release",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Release ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Release update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateReleaseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Release updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Release"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Release not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/release/{id}/aliases": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all aliases for a specific release",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "releases"
                ],
                "summary": "List release aliases",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Release ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of aliases",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ReleaseAlias"
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/release/{id}/deploy": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new deployment for a release",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "Create a deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Release ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Deployment created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.ReleaseDeployment"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/release/{id}/deploy/latest": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the most recent deployment for a release",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "Get latest deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Release ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Latest deployment",
                        "schema": {
                            "$ref": "#/definitions/models.ReleaseDeployment"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "No deployments found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/release/{id}/deploy/{deployId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a specific deployment by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "Get a deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Release ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deployId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment details",
                        "schema": {
                            "$ref": "#/definitions/models.ReleaseDeployment"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Deployment not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing deployment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "Update a deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Release ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deployId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Deployment update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReleaseDeployment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.ReleaseDeployment"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/release/{id}/deploy/{deployId}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all events for a deployment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "Get deployment events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Release ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deployId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of deployment events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DeploymentEvent"
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add an event to a deployment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "Add deployment event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Release ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deployId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AddEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deployment with updated events",
                        "schema": {
                            "$ref": "#/definitions/models.ReleaseDeployment"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/release/{id}/deployments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all deployments for a release",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "summary": "List deployments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Release ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of deployments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ReleaseDeployment"
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/releases": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all releases, optionally filtered by project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "releases"
                ],
                "summary": "List releases",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter releases by project name",
                        "name": "project",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of releases",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Release"
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.Permission": {
            "type": "string",
            "enum": [
                "alias:read",
                "alias:write",
                "deployment:read",
                "deployment:write",
                "deployment:event:read",
                "deployment:event:write",
                "release:read",
                "release:write",
                "gha:auth:read",
                "gha:auth:write"
            ],
            "x-enum-varnames": [
                "PermAliasRead",
                "PermAliasWrite",
                "PermDeploymentRead",
                "PermDeploymentWrite",
                "PermDeploymentEventRead",
                "PermDeploymentEventWrite",
                "PermReleaseRead",
                "PermReleaseWrite",
                "PermGHAAuthRead",
                "PermGHAAuthWrite"
            ]
        },
        "handlers.AddEventRequest": {
            "type": "object",
            "required": [
                "message",
                "name"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateAliasRequest": {
            "type": "object",
            "required": [
                "release_id"
            ],
            "properties": {
                "release_id": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateAuthRequest": {
            "type": "object",
            "required": [
                "permissions",
                "repository"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/auth.Permission"
                    }
                },
                "repository": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateReleaseRequest": {
            "type": "object",
            "required": [
                "bundle",
                "project",
                "project_path",
                "source_commit",
                "source_repo"
            ],
            "properties": {
                "bundle": {
                    "type": "string"
                },
                "project": {
                    "type": "string"
                },
                "project_path": {
                    "type": "string"
                },
                "source_branch": {
                    "type": "string"
                },
                "source_commit": {
                    "type": "string"
                },
                "source_repo": {
                    "type": "string"
                }
            }
        },
        "handlers.GHARepositoryAuthResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repository": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateAuthRequest": {
            "type": "object",
            "required": [
                "permissions",
                "repository"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/auth.Permission"
                    }
                },
                "repository": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateReleaseRequest": {
            "type": "object",
            "properties": {
                "bundle": {
                    "type": "string"
                },
                "project_path": {
                    "type": "string"
                },
                "source_branch": {
                    "type": "string"
                },
                "source_commit": {
                    "type": "string"
                },
                "source_repo": {
                    "type": "string"
                }
            }
        },
        "handlers.ValidateTokenRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "audience": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "handlers.ValidateTokenResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.DeploymentEvent": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deployment_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.DeploymentStatus": {
            "type": "string",
            "enum": [
                "pending",
                "running",
                "succeeded",
                "failed"
            ],
            "x-enum-varnames": [
                "DeploymentStatusPending",
                "DeploymentStatusRunning",
                "DeploymentStatusSucceeded",
                "DeploymentStatusFailed"
            ]
        },
        "models.Release": {
            "type": "object",
            "properties": {
                "bundle": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "created_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "deployments": {
                    "description": "Relationships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ReleaseDeployment"
                    }
                },
                "id": {
                    "type": "string"
                },
                "project": {
                    "type": "string"
                },
                "project_path": {
                    "type": "string"
                },
                "source_branch": {
                    "type": "string"
                },
                "source_commit": {
                    "type": "string"
                },
                "source_repo": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ReleaseAlias": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "release": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Release"
                        }
                    ]
                },
                "release_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ReleaseDeployment": {
            "type": "object",
            "properties": {
                "attempts": {
                    "type": "integer"
                },
                "created_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DeploymentEvent"
                    }
                },
                "id": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "release": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Release"
                        }
                    ]
                },
                "release_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.DeploymentStatus"
                },
                "timestamp": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}