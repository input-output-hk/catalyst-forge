services:
  auth:
    image: foundry-api:latest
    container_name: auth
    entrypoint: ["/bin/sh", "-c", "/app/foundry-api auth init --output-dir /data"]
    volumes:
      - auth:/data
    restart: on-failure

  auth-jwt:
    image: foundry-api:latest
    container_name: auth-jwt
    entrypoint: ["/bin/sh", "-c", "/app/foundry-api auth generate -a -k /data/private.pem >/jwt/token.txt"]
    volumes:
      - auth:/data
      - jwt:/jwt
    restart: on-failure
    depends_on:
      auth:
        condition: service_started

  api:
    image: foundry-api:latest
    container_name: api
    environment:
      HTTP_PORT: 5000
      AUTH_PRIVATE_KEY: /auth/private.pem
      AUTH_PUBLIC_KEY: /auth/public.pem
      DB_SUPER_USER: postgres
      DB_SUPER_PASSWORD: postgres
      DB_ROOT_NAME: postgres
      DB_INIT: "true"
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: foundry
      DB_PASSWORD: changeme
      DB_NAME: foundry
      DB_SSLMODE: disable
      K8S_ENABLED: "false"
      LOG_LEVEL: debug
      LOG_FORMAT: text
    ports:
      - "5000:5000"
    volumes:
      - auth:/auth
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      auth:
        condition: service_started
      postgres:
        condition: service_healthy
    restart: on-failure

  # api-test:
  #   image: foundry-api-test:latest
  #   container_name: api-test
  #   environment:
  #     API_URL: http://api:5000
  #     JWT_TOKEN_PATH: /jwt/token.txt
  #   volumes:
  #     - jwt:/jwt
  #   depends_on:
  #     api:
  #       condition: service_healthy

  postgres:
    image: postgres:15-alpine
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: releases
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure

volumes:
  auth:
  jwt:
  postgres-data: