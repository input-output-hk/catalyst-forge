name: Setup CI
description: Sets up the CI with the configured providers
inputs:
  earthly_version:
    description: The version of Earthly to install
    default: latest
  forge_version:
    description: The version of the forge CLI to install (use 'local' for testing)
    default: latest
runs:
  using: composite
  steps:
    # If the local version of forge is requested, we try to build (and cache) it
    # locally with Earthly
    - name: Install Earthly
      uses: earthly/actions-setup@v1
      if: inputs.forge_version == 'local'
      with:
        version: ${{ inputs.earthly_version }}
    - name: Cache Forge CLI binary
      if: inputs.forge_version == 'local'
      id: cache-forge
      uses: actions/cache@v4
      with:
        path: /usr/local/bin/forge
        key: ${{ runner.os }}-forge-${{ hashFiles('forge/cli/**', 'blueprint/**') }}
        restore-keys: |
          ${{ runner.os }}-forge-
    - name: Build Forge CLI
      if: steps.cache-forge.outputs.cache-hit != 'true' && inputs.forge_version == 'local'
      shell: bash
      run: |
          earthly --artifact ./forge/cli+build/forge /usr/local/bin/forge

    # AWS Provider
    - name: Get AWS provider configuration
      id: aws
      shell: bash
      run: |
        BP=$(forge blueprint dump .)

        AWS=$(echo "$BP" | jq -r .ci.providers.aws)
        if [[ "$AWS" != "null" ]]; then
          REGION=$(echo "$BP" | jq -r .ci.providers.aws.region)
          ROLE=$(echo "$BP" | jq -r .ci.providers.aws.role)
        fi

        echo "region=$REGION" >> $GITHUB_OUTPUT
        echo "role=$ROLE" >> $GITHUB_OUTPUT
    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v4
      if: steps.aws.outputs.region  != '' && steps.aws.outputs.role != ''
      with:
        aws-region: ${{ steps.aws.outputs.region }}
        role-to-assume: ${{ steps.aws.outputs.role }}

    # Docker Provider
    - name: Get Docker provider configuration
      id: docker
      shell: bash
      run: |
        BP=$(forge blueprint dump .)

        DOCKER=$(echo "$BP" | jq -r .ci.providers.docker.credentials)
        if [[ "$DOCKER" != "null" ]]; then
          SECRET=$(forge secret get -b . ci.providers.docker.credentials)
          USERNAME=$(echo "$SECRET" | jq -r .username)
          PASSWORD=$(echo "$SECRET" | jq -r .password)

          if [[ "$USERNAME" == "null" || "$PASSWORD" == "null" ]]; then
            echo "Error: the docker provider secret must map secret values to 'username' and 'password'"
            exit 1
          fi
        fi

        echo "::add-mask::$USERNAME"
        echo "::add-mask::$PASSWORD"

        echo "username=$USERNAME" >> $GITHUB_OUTPUT
        echo "password=$PASSWORD" >> $GITHUB_OUTPUT
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      if: steps.docker.outputs.username != '' && steps.docker.outputs.password != ''
      with:
        username: ${{ steps.docker.outputs.username }}
        password: ${{ steps.docker.outputs.password }}

    # Earthly Provider
    - name: Install Earthly
      uses: earthly/actions-setup@v1
      if: inputs.forge_version != 'local'
      with:
        version: ${{ inputs.earthly_version }}
    - name: Get Earthly provider configuration
      id: earthly
      shell: bash
      run: |
        BP=$(forge blueprint dump .)

        EARTHLY=$(echo "$BP" | jq -r .ci.providers.earthly)
        if [[ "$EARTHLY" != "null" ]]; then
          ORG=$(echo "$BP" | jq -r .ci.providers.earthly.org)
        fi

        EARTHLY_CREDS=$(echo "$BP" | jq -r .ci.providers.earthly.credentials)
        if [[ "$EARTHLY_CREDS" != "null" ]]; then
          SECRET=$(forge secret get -b . ci.providers.earthly.credentials)
          TOKEN=$(echo "$SECRET" | jq -r .token)

          if [[ "$TOKEN" == "null" ]]; then
            echo "Error: the earthly provider secret must map the secret value to 'token'"
            exit 1
          fi
        fi

        echo "org=$ORG" >> $GITHUB_OUTPUT

        echo "::add-mask::$TOKEN"
        echo "token=$TOKEN" >> $GITHUB_OUTPUT
    - name: Login to Earthly Cloud
      if: steps.earthly.outputs.token != ''
      shell: bash
      run: |
        earthly account login --token "${{ steps.earthly.outputs.token }}"
    - name: Set Earthly organization
      if: steps.earthly.outputs.org != ''
      shell: bash
      run: |
        earthly org select "${{ steps.earthly.outputs.org }}""
    - name: Testing
      shell: bash
      run: |
        forge run ./forge/cli+test