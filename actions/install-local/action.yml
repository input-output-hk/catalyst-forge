name: Install local forge CLI
description: Installs a local version of the forge CLI
inputs:
  aws_region:
    description: The AWS region to use when fetching secrets
    required: false
    default: "eu-central-1"

runs:
  using: composite
  steps:
    - shell: bash
      run: echo "Building Forge CLI locally..."
    - name: Cache Earthly binary
      id: cache-earthly
      uses: actions/cache@v4
      with:
        path: /usr/local/bin/earthly
        key: ${{ runner.os }}
    - name: Install Earthly
      if: steps.cache-earthly.outputs.cache-hit == false
      shell: bash
      run: |
        wget -q https://github.com/earthly/earthly/releases/latest/download/earthly-linux-amd64 -O /usr/local/bin/earthly
        chmod +x /usr/local/bin/earthly
        /usr/local/bin/earthly bootstrap
    - name: Install CUE
      uses: cue-lang/setup-cue@v1.0.0
      if: steps.cache-binary.outputs.cache-hit == false
      with:
        version: latest
    - name: Configure Earthly satellite credentials
      if: steps.cache-binary.outputs.cache-hit == false
      shell: bash
      run: |
        mkdir -p ~/.earthly

        EARTHLY=$(cue export -e global.ci.providers.earthly.satellite.credentials ./blueprint.cue)
        SECRET_ID=$(echo "$EARTHLY" | jq .path)

        SECRET=$(aws secretsmanager get-secret-value --region "${{ inputs.aws_region }}" --secret-id "$SECRET_ID")
        echo "$SECRET" | jq -r .SecretString | jq -r .ca_certificate | base64 -d > ~/.earthly/ca.pem
        echo "$SECRET" | jq -r .SecretString | jq -r .certificate | base64 -d > ~/.earthly/cert.pem
        echo "$SECRET" | jq -r .SecretString | jq -r .private_key | base64 -d > ~/.earthly/key.pem

        cat <<EOF > "~/.earthly/config.yml"
        global:
          buildkit_host: $(echo "$SECRET" | jq -r .SecretString | jq -r .host)
          tlsca: ca.pem
          tlscert: cert.pem
          tlskey: key.pem
        EOF
    - name: Cache binary
      id: cache-binary
      uses: actions/cache@v4
      with:
        path: /usr/local/bin/forge
        key: ${{ runner.os }}-${{ github.sha }}
    - name: Build Forge CLI
      if: steps.cache-binary.outputs.cache-hit == false
      shell: bash
      run: |
        echo "::group::Forge CLI Earthly Build"
        earthly --artifact ./cli+build/forge /usr/local/bin/forge
        echo "::endgroup::"
