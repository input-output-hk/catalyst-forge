on:
  workflow_call:
    inputs:
      earthfiles:
        description: |
          A JSON list of Earthfile paths+targets to use for publishing
        required: true
        type: string
      forge_version:
        description: |
          The version of the forge CLI to install (use 'local' for testing)
        required: true
        type: string
    secrets:
      earthly_token:
        description: Optional Earthly token used to login to Earthly cloud during local builds of Forge CLI
        required: false
env:
  OUTPUT: ${{ github.workspace }}/output

jobs:
  run:
    name: ${{ matrix.earthfile }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        earthfile: ${{ fromJson(inputs.earthfiles) }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Forge
        uses: ./forge/actions/install
        with:
          earthly_token: ${{ secrets.earthly_token }}
          version: ${{ inputs.forge_version }}
      - id: local
        run: |
          if [[ "${{ inputs.forge_version }}" == "local" ]]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi
      - name: Setup CI
        uses: ./forge/actions/setup
        with:
          skip_earthly: ${{ steps.local.outputs.skip }}
      - name: Run
        id: run
        uses: ./forge/actions/run
        with:
          artifact: ${{ env.OUTPUT }}
          path: ${{ matrix.earthfile }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Parse Earthfile reference
        id: parse
        run: |
          EARTHFILE='${{ matrix.earthfile }}'
          PROJECT="${EARTHFILE%+*}"
          TARGET="${EARTHFILE#*+}"

          echo "project=$PROJECT" >> $GITHUB_OUTPUT
          echo "target=$TARGET" >> $GITHUB_OUTPUT
      - name: Release
        uses: ./forge/actions/release
        with:
          native_platform: linux/amd64
          path: ${{ env.OUTPUT }}
          project: ${{ steps.parse.outputs.project }}
          target: ${{ steps.parse.outputs.target }}