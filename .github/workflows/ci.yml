on:
  workflow_call:
    inputs:
      forge_version:
        description: |
          The version of the forge CLI to install (use 'local' for testing)
        type: string
        required: false
        default: latest
      local:
        description: Forces local mode
        required: false
        type: string
        default: "false"
      verbosity:
        description: The verbosity level to use
        required: false
        type: string
        default: "info"
    secrets:
      earthly_token:
        description: Optional Earthly token used to login to Earthly cloud during local builds of Forge CLI
        required: false

env:
  FORGE_REGEX_CHECK: ^check(-.*)?$
  FORGE_REGEX_BUILD: ^build(-.*)?$
  FORGE_REGEX_PACKAGE: ^package(-.*)?$
  FORGE_REGEX_TEST: ^test(-.*)?$
  FORGE_REGEX_DOCS: ^docs(-.*)?$
  FORGE_REGEX_RELEASE: ^release(-.*)?$
  FORGE_REGEX_PUBLISH: ^publish(-.*)?$

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      deployments: ${{ steps.discovery.outputs.deployments }}
      earthfiles: ${{ steps.discovery.outputs.earthfiles }}
      releases: ${{ steps.discovery.outputs.releases }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Forge
        uses: input-output-hk/catalyst-forge/actions/install@master
        if: ${{ inputs.forge_version != 'local' }}
        with:
          version: ${{ inputs.forge_version }}
      - name: Install Local Forge
        uses: input-output-hk/catalyst-forge/actions/install-local@master
        if: ${{ inputs.forge_version == 'local' }}
        with:
          earthly_token: ${{ secrets.earthly_token }}
      - name: Check forge version
        id: local
        run: |
          forge version

          if [[ "${{ inputs.forge_version }}" == "local" ]]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi
      - name: Setup CI
        uses: input-output-hk/catalyst-forge/actions/setup@master
        with:
          skip_docker: 'true'
          skip_github: 'true'
          skip_earthly: ${{ steps.local.outputs.skip }}
      - name: Discovery
        id: discovery
        uses: input-output-hk/catalyst-forge/actions/discovery@master
        with:
          filters: |
            ${{ env.FORGE_REGEX_CHECK }}
            ${{ env.FORGE_REGEX_BUILD }}
            ${{ env.FORGE_REGEX_PACKAGE }}
            ${{ env.FORGE_REGEX_TEST }}
            ${{ env.FORGE_REGEX_DOCS }}
            ${{ env.FORGE_REGEX_RELEASE }}
            ${{ env.FORGE_REGEX_PUBLISH }}

  check:
    uses: input-output-hk/catalyst-forge/.github/workflows/run.yml@master
    needs: [discover]
    if: (fromJson(needs.discover.outputs.earthfiles)['^check(-.*)?$'] != null) && !failure() && !cancelled()
    with:
      earthfiles: ${{ toJson(fromJson(needs.discover.outputs.earthfiles)['^check(-.*)?$']) }}
      forge_version: ${{ inputs.forge_version }}
      local: ${{ inputs.local }}
      verbosity: ${{ inputs.verbosity }}
    secrets:
      earthly_token: ${{ secrets.earthly_token }}

  build:
    uses: input-output-hk/catalyst-forge/.github/workflows/run.yml@master
    needs: [discover, check]
    if: (fromJson(needs.discover.outputs.earthfiles)['^build(-.*)?$'] != null) && !failure() && !cancelled()
    with:
      earthfiles: ${{ toJson(fromJson(needs.discover.outputs.earthfiles)['^build(-.*)?$']) }}
      forge_version: ${{ inputs.forge_version }}
      local: ${{ inputs.local }}
      verbosity: ${{ inputs.verbosity }}
    secrets:
      earthly_token: ${{ secrets.earthly_token }}

  package:
    uses: input-output-hk/catalyst-forge/.github/workflows/run.yml@master
    needs: [discover, check, build]
    if: (fromJson(needs.discover.outputs.earthfiles)['^package(-.*)?$'] != null) && !failure() && !cancelled()
    with:
      earthfiles: ${{ toJson(fromJson(needs.discover.outputs.earthfiles)['^package(-.*)?$']) }}
      forge_version: ${{ inputs.forge_version }}
      local: ${{ inputs.local }}
      verbosity: ${{ inputs.verbosity }}
    secrets:
      earthly_token: ${{ secrets.earthly_token }}

  test:
    uses: input-output-hk/catalyst-forge/.github/workflows/run.yml@master
    needs: [discover, check, build, package]
    if: (fromJson(needs.discover.outputs.earthfiles)['^test(-.*)?$'] != null) && !failure() && !cancelled()
    with:
      earthfiles: ${{ toJson(fromJson(needs.discover.outputs.earthfiles)['^test(-.*)?$']) }}
      forge_version: ${{ inputs.forge_version }}
      local: ${{ inputs.local }}
      verbosity: ${{ inputs.verbosity }}
    secrets:
      earthly_token: ${{ secrets.earthly_token }}

  docs:
    uses: input-output-hk/catalyst-forge/.github/workflows/docs.yml@master
    needs: [discover, check, build, test]
    if: (fromJson(needs.discover.outputs.earthfiles)['^docs(-.*)?$'] != null) && !failure() && !cancelled()
    with:
      earthfiles: ${{ toJson(fromJson(needs.discover.outputs.earthfiles)['^docs(-.*)?$']) }}
      forge_version: ${{ inputs.forge_version }}
    secrets:
      earthly_token: ${{ secrets.earthly_token }}

  release:
    uses: input-output-hk/catalyst-forge/.github/workflows/release.yml@master
    needs: [discover, check, build, test]
    if: (fromJson(needs.discover.outputs.releases)[0] != null) && !failure() && !cancelled()
    with:
      releases: ${{ needs.discover.outputs.releases }}
      forge_version: ${{ inputs.forge_version }}
      local: ${{ inputs.local }}
      verbosity: ${{ inputs.verbosity }}
    secrets:
      earthly_token: ${{ secrets.earthly_token }}

  deploy:
    uses: input-output-hk/catalyst-forge/.github/workflows/deploy.yml@master
    needs: [discover, check, build, test, release]
    if: (fromJson(needs.discover.outputs.deployments)[0] != null) && !failure() && !cancelled()
    with:
      deployments: ${{ needs.discover.outputs.deployments }}
      forge_version: ${{ inputs.forge_version }}
      local: ${{ inputs.local }}
      verbosity: ${{ inputs.verbosity }}
    secrets:
      earthly_token: ${{ secrets.earthly_token }}

  final:
    needs: [check, build, package, test, release]
    if: (!failure() && !cancelled()) || (!failure() || !cancelled())
    runs-on: ubuntu-latest
    steps:
      - name: Final
        run: echo "All done"