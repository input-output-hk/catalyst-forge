// Code generated by "cue exp gengotypes"; DO NOT EDIT.

package project

import (
	"github.com/input-output-hk/catalyst-forge/lib/schema/blueprint/common"
)

type CI struct {
	// Targets configures the individual targets that are run by the CI system.
	Targets map[string]Target `json:"targets"`
}

type Deployment struct {
	// On contains the events that trigger the deployment.
	On map[string]any/* CUE top */ `json:"on"`

	// Bundle contains the deployment modules for the project.
	Bundle ModuleBundle `json:"bundle"`
}

type ModuleBundle struct {
	Env string `json:"env"`

	Modules map[string]Module `json:"modules"`
}

type Module struct {
	// Instance contains the instance name to use for all generated resources.
	Instance string `json:"instance,omitempty"`

	// Name contains the name of the module to deploy.
	Name string `json:"name,omitempty"`

	// Namespace contains the namespace to deploy the module to.
	Namespace string `json:"namespace"`

	// Path contains the path to the module.
	Path string `json:"path,omitempty"`

	// Registry contains the registry to pull the module from.
	Registry string `json:"registry,omitempty"`

	// Type contains the type of the module.
	Type string `json:"type"`

	// Values contains the values to pass to the deployment module.
	Values any/* CUE top */ `json:"values,omitempty"`

	// Version contains the version of the deployment module.
	Version string `json:"version,omitempty"`
}

type Project struct {
	// Name contains the name of the project.
	Name string `json:"name"`

	// Container is the name that the container will be built as.
	Container string `json:"container"`

	// CI contains the configuration for the CI system.
	Ci *CI `json:"ci,omitempty"`

	// Deployment contains the configuration for the deployment of the project.
	Deployment *Deployment `json:"deployment,omitempty"`

	// Release contains the configuration for the release of the project.
	Release map[string]Release `json:"release,omitempty"`
}

type Release struct {
	// Config contains the configuration to pass to the release.
	Config any/* CUE top */ `json:"config,omitempty"`

	// On contains the events that trigger the release.
	On map[string]any/* CUE top */ `json:"on"`

	// Target is the Earthly target to run for this release.
	// Defaults to release name.
	Target string `json:"target,omitempty"`
}

// Target contains the configuration for a single target.
type Target struct {
	// Args contains the arguments to pass to the target.
	Args map[string]string `json:"args,omitempty"`

	// Platforms contains the platforms to run the target against.
	Platforms []string `json:"platforms,omitempty"`

	// Privileged determines if the target should run in privileged mode.
	Privileged bool `json:"privileged,omitempty"`

	// Retries contains the number of times to retry the target.
	Retries int64 `json:"retries,omitempty"`

	// Secrets contains the secrets to pass to the target.
	Secrets []common.Secret `json:"secrets,omitempty"`
}
