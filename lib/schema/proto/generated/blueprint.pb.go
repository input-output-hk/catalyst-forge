// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: blueprint.proto

package generated

import (
	global "github.com/input-output-hk/catalyst-forge/lib/schema/proto/generated/global"
	project "github.com/input-output-hk/catalyst-forge/lib/schema/proto/generated/project"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Blueprint contains the schema for blueprint files.
type Blueprint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Data contains arbitrary configuration data that can be re-used throughout the blueprint.
	// This is useful for loading attribute values, for example:
	//
	//	data: foo: _ @env(name="FOO", type="string")
	//
	// This is a necessary workaround as attribute values cannot be arbitrarily referenced in CUE.
	// This field is otherwise unused.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Global contains the global configuration for the repository.
	Global *global.Global `protobuf:"bytes,2,opt,name=global,proto3" json:"global,omitempty"`
	// Project contains the configuration for the project.
	Project *project.Project `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	// DEPRECATED: This field is deprecated and will be removed in a future version.
	Version       string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Blueprint) Reset() {
	*x = Blueprint{}
	mi := &file_blueprint_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Blueprint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blueprint) ProtoMessage() {}

func (x *Blueprint) ProtoReflect() protoreflect.Message {
	mi := &file_blueprint_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blueprint.ProtoReflect.Descriptor instead.
func (*Blueprint) Descriptor() ([]byte, []int) {
	return file_blueprint_proto_rawDescGZIP(), []int{0}
}

func (x *Blueprint) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Blueprint) GetGlobal() *global.Global {
	if x != nil {
		return x.Global
	}
	return nil
}

func (x *Blueprint) GetProject() *project.Project {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *Blueprint) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_blueprint_proto protoreflect.FileDescriptor

const file_blueprint_proto_rawDesc = "" +
	"\n" +
	"\x0fblueprint.proto\x12\tblueprint\x1a\x11global/main.proto\x1a\x12project/main.proto\"\x8d\x01\n" +
	"\tBlueprint\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12&\n" +
	"\x06global\x18\x02 \x01(\v2\x0e.global.GlobalR\x06global\x12*\n" +
	"\aproject\x18\x03 \x01(\v2\x10.project.ProjectR\aproject\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversionBFZDgithub.com/input-output-hk/catalyst-forge/lib/schema/proto/generatedb\x06proto3"

var (
	file_blueprint_proto_rawDescOnce sync.Once
	file_blueprint_proto_rawDescData []byte
)

func file_blueprint_proto_rawDescGZIP() []byte {
	file_blueprint_proto_rawDescOnce.Do(func() {
		file_blueprint_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_blueprint_proto_rawDesc), len(file_blueprint_proto_rawDesc)))
	})
	return file_blueprint_proto_rawDescData
}

var file_blueprint_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_blueprint_proto_goTypes = []any{
	(*Blueprint)(nil),       // 0: blueprint.Blueprint
	(*global.Global)(nil),   // 1: global.Global
	(*project.Project)(nil), // 2: project.Project
}
var file_blueprint_proto_depIdxs = []int32{
	1, // 0: blueprint.Blueprint.global:type_name -> global.Global
	2, // 1: blueprint.Blueprint.project:type_name -> project.Project
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_blueprint_proto_init() }
func file_blueprint_proto_init() {
	if File_blueprint_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_blueprint_proto_rawDesc), len(file_blueprint_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_blueprint_proto_goTypes,
		DependencyIndexes: file_blueprint_proto_depIdxs,
		MessageInfos:      file_blueprint_proto_msgTypes,
	}.Build()
	File_blueprint_proto = out.File
	file_blueprint_proto_goTypes = nil
	file_blueprint_proto_depIdxs = nil
}
