// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: project/ci.proto

package project

import (
	common "github.com/input-output-hk/catalyst-forge/lib/schema/proto/generated/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CI contains the configuration for the CI system.
type CI struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Targets configures the individual targets that are run by the CI system.
	Targets       map[string]*Target `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CI) Reset() {
	*x = CI{}
	mi := &file_project_ci_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CI) ProtoMessage() {}

func (x *CI) ProtoReflect() protoreflect.Message {
	mi := &file_project_ci_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CI.ProtoReflect.Descriptor instead.
func (*CI) Descriptor() ([]byte, []int) {
	return file_project_ci_proto_rawDescGZIP(), []int{0}
}

func (x *CI) GetTargets() map[string]*Target {
	if x != nil {
		return x.Targets
	}
	return nil
}

// Target contains the configuration for a single target.
type Target struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Args contains the arguments to pass to the target.
	Args map[string]string `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Platforms contains the platforms to run the target against.
	Platforms []string `protobuf:"bytes,2,rep,name=platforms,proto3" json:"platforms,omitempty"`
	// Privileged determines if the target should run in privileged mode.
	Privileged bool `protobuf:"varint,3,opt,name=privileged,proto3" json:"privileged,omitempty"`
	// Retries contains the configuration for the retries of an Earthly target.
	Retries *common.CIRetries `protobuf:"bytes,4,opt,name=retries,proto3" json:"retries,omitempty"`
	// Tags are used to uniquely identify a target when scanning.
	Tags []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	// Secrets contains the secrets to pass to the target.
	Secrets       []*common.Secret `protobuf:"bytes,6,rep,name=secrets,proto3" json:"secrets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_project_ci_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_project_ci_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_project_ci_proto_rawDescGZIP(), []int{1}
}

func (x *Target) GetArgs() map[string]string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Target) GetPlatforms() []string {
	if x != nil {
		return x.Platforms
	}
	return nil
}

func (x *Target) GetPrivileged() bool {
	if x != nil {
		return x.Privileged
	}
	return false
}

func (x *Target) GetRetries() *common.CIRetries {
	if x != nil {
		return x.Retries
	}
	return nil
}

func (x *Target) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Target) GetSecrets() []*common.Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

var File_project_ci_proto protoreflect.FileDescriptor

const file_project_ci_proto_rawDesc = "" +
	"\n" +
	"\x10project/ci.proto\x12\aproject\x1a\x14common/retries.proto\x1a\x13common/secret.proto\"\x85\x01\n" +
	"\x02CI\x122\n" +
	"\atargets\x18\x01 \x03(\v2\x18.project.CI.TargetsEntryR\atargets\x1aK\n" +
	"\fTargetsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12%\n" +
	"\x05value\x18\x02 \x01(\v2\x0f.project.TargetR\x05value:\x028\x01\"\x99\x02\n" +
	"\x06Target\x12-\n" +
	"\x04args\x18\x01 \x03(\v2\x19.project.Target.ArgsEntryR\x04args\x12\x1c\n" +
	"\tplatforms\x18\x02 \x03(\tR\tplatforms\x12\x1e\n" +
	"\n" +
	"privileged\x18\x03 \x01(\bR\n" +
	"privileged\x12+\n" +
	"\aretries\x18\x04 \x01(\v2\x11.common.CIRetriesR\aretries\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x12(\n" +
	"\asecrets\x18\x06 \x03(\v2\x0e.common.SecretR\asecrets\x1a7\n" +
	"\tArgsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01BNZLgithub.com/input-output-hk/catalyst-forge/lib/schema/proto/generated/projectb\x06proto3"

var (
	file_project_ci_proto_rawDescOnce sync.Once
	file_project_ci_proto_rawDescData []byte
)

func file_project_ci_proto_rawDescGZIP() []byte {
	file_project_ci_proto_rawDescOnce.Do(func() {
		file_project_ci_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_ci_proto_rawDesc), len(file_project_ci_proto_rawDesc)))
	})
	return file_project_ci_proto_rawDescData
}

var file_project_ci_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_project_ci_proto_goTypes = []any{
	(*CI)(nil),               // 0: project.CI
	(*Target)(nil),           // 1: project.Target
	nil,                      // 2: project.CI.TargetsEntry
	nil,                      // 3: project.Target.ArgsEntry
	(*common.CIRetries)(nil), // 4: common.CIRetries
	(*common.Secret)(nil),    // 5: common.Secret
}
var file_project_ci_proto_depIdxs = []int32{
	2, // 0: project.CI.targets:type_name -> project.CI.TargetsEntry
	3, // 1: project.Target.args:type_name -> project.Target.ArgsEntry
	4, // 2: project.Target.retries:type_name -> common.CIRetries
	5, // 3: project.Target.secrets:type_name -> common.Secret
	1, // 4: project.CI.TargetsEntry.value:type_name -> project.Target
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_project_ci_proto_init() }
func file_project_ci_proto_init() {
	if File_project_ci_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_ci_proto_rawDesc), len(file_project_ci_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_ci_proto_goTypes,
		DependencyIndexes: file_project_ci_proto_depIdxs,
		MessageInfos:      file_project_ci_proto_msgTypes,
	}.Build()
	File_project_ci_proto = out.File
	file_project_ci_proto_goTypes = nil
	file_project_ci_proto_depIdxs = nil
}
