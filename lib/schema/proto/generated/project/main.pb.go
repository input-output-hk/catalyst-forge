// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: project/main.proto

package project

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Project contains the configuration for a project.
type Project struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name contains the name of the project.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Container is the name that the container will be built as.
	Container string `protobuf:"bytes,2,opt,name=container,proto3" json:"container,omitempty"`
	// CI contains the configuration for the CI system.
	Ci *CI `protobuf:"bytes,3,opt,name=ci,proto3" json:"ci,omitempty"`
	// Deployment contains the configuration for the deployment of the project.
	Deployment *Deployment `protobuf:"bytes,4,opt,name=deployment,proto3" json:"deployment,omitempty"`
	// Release contains the configuration for the release of the project.
	Release       map[string]*Release `protobuf:"bytes,5,rep,name=release,proto3" json:"release,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Project) Reset() {
	*x = Project{}
	mi := &file_project_main_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_project_main_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_project_main_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *Project) GetCi() *CI {
	if x != nil {
		return x.Ci
	}
	return nil
}

func (x *Project) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

func (x *Project) GetRelease() map[string]*Release {
	if x != nil {
		return x.Release
	}
	return nil
}

var File_project_main_proto protoreflect.FileDescriptor

const file_project_main_proto_rawDesc = "" +
	"\n" +
	"\x12project/main.proto\x12\aproject\x1a\x10project/ci.proto\x1a\x18project/deployment.proto\x1a\x15project/release.proto\"\x94\x02\n" +
	"\aProject\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tcontainer\x18\x02 \x01(\tR\tcontainer\x12\x1b\n" +
	"\x02ci\x18\x03 \x01(\v2\v.project.CIR\x02ci\x123\n" +
	"\n" +
	"deployment\x18\x04 \x01(\v2\x13.project.DeploymentR\n" +
	"deployment\x127\n" +
	"\arelease\x18\x05 \x03(\v2\x1d.project.Project.ReleaseEntryR\arelease\x1aL\n" +
	"\fReleaseEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12&\n" +
	"\x05value\x18\x02 \x01(\v2\x10.project.ReleaseR\x05value:\x028\x01BNZLgithub.com/input-output-hk/catalyst-forge/lib/schema/proto/generated/projectb\x06proto3"

var (
	file_project_main_proto_rawDescOnce sync.Once
	file_project_main_proto_rawDescData []byte
)

func file_project_main_proto_rawDescGZIP() []byte {
	file_project_main_proto_rawDescOnce.Do(func() {
		file_project_main_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_main_proto_rawDesc), len(file_project_main_proto_rawDesc)))
	})
	return file_project_main_proto_rawDescData
}

var file_project_main_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_project_main_proto_goTypes = []any{
	(*Project)(nil),    // 0: project.Project
	nil,                // 1: project.Project.ReleaseEntry
	(*CI)(nil),         // 2: project.CI
	(*Deployment)(nil), // 3: project.Deployment
	(*Release)(nil),    // 4: project.Release
}
var file_project_main_proto_depIdxs = []int32{
	2, // 0: project.Project.ci:type_name -> project.CI
	3, // 1: project.Project.deployment:type_name -> project.Deployment
	1, // 2: project.Project.release:type_name -> project.Project.ReleaseEntry
	4, // 3: project.Project.ReleaseEntry.value:type_name -> project.Release
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_project_main_proto_init() }
func file_project_main_proto_init() {
	if File_project_main_proto != nil {
		return
	}
	file_project_ci_proto_init()
	file_project_deployment_proto_init()
	file_project_release_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_main_proto_rawDesc), len(file_project_main_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_main_proto_goTypes,
		DependencyIndexes: file_project_main_proto_depIdxs,
		MessageInfos:      file_project_main_proto_msgTypes,
	}.Build()
	File_project_main_proto = out.File
	file_project_main_proto_goTypes = nil
	file_project_main_proto_depIdxs = nil
}
