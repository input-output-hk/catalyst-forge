// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: project/release.proto

package project

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Release contains the configuration for the release of the project.
type Release struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Config contains the configuration to pass to the release.
	Config []byte `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// On contains the events that trigger the release.
	On map[string][]byte `protobuf:"bytes,2,rep,name=on,proto3" json:"on,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Target is the Earthly target to run for this release.
	// Defaults to release name.
	Target        string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Release) Reset() {
	*x = Release{}
	mi := &file_project_release_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Release) ProtoMessage() {}

func (x *Release) ProtoReflect() protoreflect.Message {
	mi := &file_project_release_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Release.ProtoReflect.Descriptor instead.
func (*Release) Descriptor() ([]byte, []int) {
	return file_project_release_proto_rawDescGZIP(), []int{0}
}

func (x *Release) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Release) GetOn() map[string][]byte {
	if x != nil {
		return x.On
	}
	return nil
}

func (x *Release) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

var File_project_release_proto protoreflect.FileDescriptor

const file_project_release_proto_rawDesc = "" +
	"\n" +
	"\x15project/release.proto\x12\aproject\"\x9a\x01\n" +
	"\aRelease\x12\x16\n" +
	"\x06config\x18\x01 \x01(\fR\x06config\x12(\n" +
	"\x02on\x18\x02 \x03(\v2\x18.project.Release.OnEntryR\x02on\x12\x16\n" +
	"\x06target\x18\x03 \x01(\tR\x06target\x1a5\n" +
	"\aOnEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01BNZLgithub.com/input-output-hk/catalyst-forge/lib/schema/proto/generated/projectb\x06proto3"

var (
	file_project_release_proto_rawDescOnce sync.Once
	file_project_release_proto_rawDescData []byte
)

func file_project_release_proto_rawDescGZIP() []byte {
	file_project_release_proto_rawDescOnce.Do(func() {
		file_project_release_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_release_proto_rawDesc), len(file_project_release_proto_rawDesc)))
	})
	return file_project_release_proto_rawDescData
}

var file_project_release_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_project_release_proto_goTypes = []any{
	(*Release)(nil), // 0: project.Release
	nil,             // 1: project.Release.OnEntry
}
var file_project_release_proto_depIdxs = []int32{
	1, // 0: project.Release.on:type_name -> project.Release.OnEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_project_release_proto_init() }
func file_project_release_proto_init() {
	if File_project_release_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_release_proto_rawDesc), len(file_project_release_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_release_proto_goTypes,
		DependencyIndexes: file_project_release_proto_depIdxs,
		MessageInfos:      file_project_release_proto_msgTypes,
	}.Build()
	File_project_release_proto = out.File
	file_project_release_proto_goTypes = nil
	file_project_release_proto_depIdxs = nil
}
