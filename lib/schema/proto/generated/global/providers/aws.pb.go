// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: global/providers/aws.proto

package providers

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AWS contains the configuration for the AWS provider.
type AWS struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ECR contains the configuration for AWS ECR.
	Ecr *AWSECR `protobuf:"bytes,1,opt,name=ecr,proto3" json:"ecr,omitempty"`
	// Role contains the role to assume.
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	// Region contains the region to use.
	Region        string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AWS) Reset() {
	*x = AWS{}
	mi := &file_global_providers_aws_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AWS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWS) ProtoMessage() {}

func (x *AWS) ProtoReflect() protoreflect.Message {
	mi := &file_global_providers_aws_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWS.ProtoReflect.Descriptor instead.
func (*AWS) Descriptor() ([]byte, []int) {
	return file_global_providers_aws_proto_rawDescGZIP(), []int{0}
}

func (x *AWS) GetEcr() *AWSECR {
	if x != nil {
		return x.Ecr
	}
	return nil
}

func (x *AWS) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AWS) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// AWSECR contains the configuration for AWS ECR.
type AWSECR struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// AutoCreate contains whether to automatically create ECR repositories.
	AutoCreate bool `protobuf:"varint,1,opt,name=autoCreate,proto3" json:"autoCreate,omitempty"`
	// Registry is the ECR registry to login to during CI operations.
	Registry      string `protobuf:"bytes,2,opt,name=registry,proto3" json:"registry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AWSECR) Reset() {
	*x = AWSECR{}
	mi := &file_global_providers_aws_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AWSECR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSECR) ProtoMessage() {}

func (x *AWSECR) ProtoReflect() protoreflect.Message {
	mi := &file_global_providers_aws_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSECR.ProtoReflect.Descriptor instead.
func (*AWSECR) Descriptor() ([]byte, []int) {
	return file_global_providers_aws_proto_rawDescGZIP(), []int{1}
}

func (x *AWSECR) GetAutoCreate() bool {
	if x != nil {
		return x.AutoCreate
	}
	return false
}

func (x *AWSECR) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

var File_global_providers_aws_proto protoreflect.FileDescriptor

const file_global_providers_aws_proto_rawDesc = "" +
	"\n" +
	"\x1aglobal/providers/aws.proto\x12\tproviders\"V\n" +
	"\x03AWS\x12#\n" +
	"\x03ecr\x18\x01 \x01(\v2\x11.providers.AWSECRR\x03ecr\x12\x12\n" +
	"\x04role\x18\x02 \x01(\tR\x04role\x12\x16\n" +
	"\x06region\x18\x03 \x01(\tR\x06region\"D\n" +
	"\x06AWSECR\x12\x1e\n" +
	"\n" +
	"autoCreate\x18\x01 \x01(\bR\n" +
	"autoCreate\x12\x1a\n" +
	"\bregistry\x18\x02 \x01(\tR\bregistryBWZUgithub.com/input-output-hk/catalyst-forge/lib/schema/proto/generated/global/providersb\x06proto3"

var (
	file_global_providers_aws_proto_rawDescOnce sync.Once
	file_global_providers_aws_proto_rawDescData []byte
)

func file_global_providers_aws_proto_rawDescGZIP() []byte {
	file_global_providers_aws_proto_rawDescOnce.Do(func() {
		file_global_providers_aws_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_global_providers_aws_proto_rawDesc), len(file_global_providers_aws_proto_rawDesc)))
	})
	return file_global_providers_aws_proto_rawDescData
}

var file_global_providers_aws_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_global_providers_aws_proto_goTypes = []any{
	(*AWS)(nil),    // 0: providers.AWS
	(*AWSECR)(nil), // 1: providers.AWSECR
}
var file_global_providers_aws_proto_depIdxs = []int32{
	1, // 0: providers.AWS.ecr:type_name -> providers.AWSECR
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_global_providers_aws_proto_init() }
func file_global_providers_aws_proto_init() {
	if File_global_providers_aws_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_global_providers_aws_proto_rawDesc), len(file_global_providers_aws_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_global_providers_aws_proto_goTypes,
		DependencyIndexes: file_global_providers_aws_proto_depIdxs,
		MessageInfos:      file_global_providers_aws_proto_msgTypes,
	}.Build()
	File_global_providers_aws_proto = out.File
	file_global_providers_aws_proto_goTypes = nil
	file_global_providers_aws_proto_depIdxs = nil
}
