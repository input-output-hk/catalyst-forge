// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: global/providers/github.proto

package providers

import (
	common "github.com/input-output-hk/catalyst-forge/lib/schema/proto/generated/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Github contains the configuration for the Github provider.
type Github struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Credentials contains the credentials to use for Github
	Credentials *common.Secret `protobuf:"bytes,1,opt,name=credentials,proto3" json:"credentials,omitempty"`
	// Registry contains the Github registry to use.
	Registry      string `protobuf:"bytes,2,opt,name=registry,proto3" json:"registry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Github) Reset() {
	*x = Github{}
	mi := &file_global_providers_github_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Github) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Github) ProtoMessage() {}

func (x *Github) ProtoReflect() protoreflect.Message {
	mi := &file_global_providers_github_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Github.ProtoReflect.Descriptor instead.
func (*Github) Descriptor() ([]byte, []int) {
	return file_global_providers_github_proto_rawDescGZIP(), []int{0}
}

func (x *Github) GetCredentials() *common.Secret {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *Github) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

var File_global_providers_github_proto protoreflect.FileDescriptor

const file_global_providers_github_proto_rawDesc = "" +
	"\n" +
	"\x1dglobal/providers/github.proto\x12\tproviders\x1a\x13common/secret.proto\"V\n" +
	"\x06Github\x120\n" +
	"\vcredentials\x18\x01 \x01(\v2\x0e.common.SecretR\vcredentials\x12\x1a\n" +
	"\bregistry\x18\x02 \x01(\tR\bregistryBWZUgithub.com/input-output-hk/catalyst-forge/lib/schema/proto/generated/global/providersb\x06proto3"

var (
	file_global_providers_github_proto_rawDescOnce sync.Once
	file_global_providers_github_proto_rawDescData []byte
)

func file_global_providers_github_proto_rawDescGZIP() []byte {
	file_global_providers_github_proto_rawDescOnce.Do(func() {
		file_global_providers_github_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_global_providers_github_proto_rawDesc), len(file_global_providers_github_proto_rawDesc)))
	})
	return file_global_providers_github_proto_rawDescData
}

var file_global_providers_github_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_global_providers_github_proto_goTypes = []any{
	(*Github)(nil),        // 0: providers.Github
	(*common.Secret)(nil), // 1: common.Secret
}
var file_global_providers_github_proto_depIdxs = []int32{
	1, // 0: providers.Github.credentials:type_name -> common.Secret
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_global_providers_github_proto_init() }
func file_global_providers_github_proto_init() {
	if File_global_providers_github_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_global_providers_github_proto_rawDesc), len(file_global_providers_github_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_global_providers_github_proto_goTypes,
		DependencyIndexes: file_global_providers_github_proto_depIdxs,
		MessageInfos:      file_global_providers_github_proto_msgTypes,
	}.Build()
	File_global_providers_github_proto = out.File
	file_global_providers_github_proto_goTypes = nil
	file_global_providers_github_proto_depIdxs = nil
}
