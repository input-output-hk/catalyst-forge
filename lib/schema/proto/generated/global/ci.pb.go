// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: global/ci.proto

package global

import (
	common "github.com/input-output-hk/catalyst-forge/lib/schema/proto/generated/common"
	providers "github.com/input-output-hk/catalyst-forge/lib/schema/proto/generated/global/providers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CI contains the configuration for the CI system.
type CI struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Local defines the filters to use when simulating a local CI run.
	Local []string `protobuf:"bytes,1,rep,name=local,proto3" json:"local,omitempty"`
	// Providers contains the configuration for the providers being used by the CI system.
	Providers *providers.Providers `protobuf:"bytes,2,opt,name=providers,proto3" json:"providers,omitempty"`
	// Registries contains the container registries to push images to.
	Registries []string `protobuf:"bytes,3,rep,name=registries,proto3" json:"registries,omitempty"`
	// Release contains the configuration for the release of a project.
	Release *Release `protobuf:"bytes,4,opt,name=release,proto3" json:"release,omitempty"`
	// Retries contains the configuration for the retries of an Earthly target.
	Retries *common.CIRetries `protobuf:"bytes,5,opt,name=retries,proto3" json:"retries,omitempty"`
	// Secrets contains global secrets that will be passed to all targets.
	Secrets       []*common.Secret `protobuf:"bytes,6,rep,name=secrets,proto3" json:"secrets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CI) Reset() {
	*x = CI{}
	mi := &file_global_ci_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CI) ProtoMessage() {}

func (x *CI) ProtoReflect() protoreflect.Message {
	mi := &file_global_ci_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CI.ProtoReflect.Descriptor instead.
func (*CI) Descriptor() ([]byte, []int) {
	return file_global_ci_proto_rawDescGZIP(), []int{0}
}

func (x *CI) GetLocal() []string {
	if x != nil {
		return x.Local
	}
	return nil
}

func (x *CI) GetProviders() *providers.Providers {
	if x != nil {
		return x.Providers
	}
	return nil
}

func (x *CI) GetRegistries() []string {
	if x != nil {
		return x.Registries
	}
	return nil
}

func (x *CI) GetRelease() *Release {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *CI) GetRetries() *common.CIRetries {
	if x != nil {
		return x.Retries
	}
	return nil
}

func (x *CI) GetSecrets() []*common.Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

var File_global_ci_proto protoreflect.FileDescriptor

const file_global_ci_proto_rawDesc = "" +
	"\n" +
	"\x0fglobal/ci.proto\x12\x06global\x1a\x14common/retries.proto\x1a\x13common/secret.proto\x1a global/providers/providers.proto\x1a\x14global/release.proto\"\xf0\x01\n" +
	"\x02CI\x12\x14\n" +
	"\x05local\x18\x01 \x03(\tR\x05local\x122\n" +
	"\tproviders\x18\x02 \x01(\v2\x14.providers.ProvidersR\tproviders\x12\x1e\n" +
	"\n" +
	"registries\x18\x03 \x03(\tR\n" +
	"registries\x12)\n" +
	"\arelease\x18\x04 \x01(\v2\x0f.global.ReleaseR\arelease\x12+\n" +
	"\aretries\x18\x05 \x01(\v2\x11.common.CIRetriesR\aretries\x12(\n" +
	"\asecrets\x18\x06 \x03(\v2\x0e.common.SecretR\asecretsBMZKgithub.com/input-output-hk/catalyst-forge/lib/schema/proto/generated/globalb\x06proto3"

var (
	file_global_ci_proto_rawDescOnce sync.Once
	file_global_ci_proto_rawDescData []byte
)

func file_global_ci_proto_rawDescGZIP() []byte {
	file_global_ci_proto_rawDescOnce.Do(func() {
		file_global_ci_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_global_ci_proto_rawDesc), len(file_global_ci_proto_rawDesc)))
	})
	return file_global_ci_proto_rawDescData
}

var file_global_ci_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_global_ci_proto_goTypes = []any{
	(*CI)(nil),                  // 0: global.CI
	(*providers.Providers)(nil), // 1: providers.Providers
	(*Release)(nil),             // 2: global.Release
	(*common.CIRetries)(nil),    // 3: common.CIRetries
	(*common.Secret)(nil),       // 4: common.Secret
}
var file_global_ci_proto_depIdxs = []int32{
	1, // 0: global.CI.providers:type_name -> providers.Providers
	2, // 1: global.CI.release:type_name -> global.Release
	3, // 2: global.CI.retries:type_name -> common.CIRetries
	4, // 3: global.CI.secrets:type_name -> common.Secret
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_global_ci_proto_init() }
func file_global_ci_proto_init() {
	if File_global_ci_proto != nil {
		return
	}
	file_global_release_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_global_ci_proto_rawDesc), len(file_global_ci_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_global_ci_proto_goTypes,
		DependencyIndexes: file_global_ci_proto_depIdxs,
		MessageInfos:      file_global_ci_proto_msgTypes,
	}.Build()
	File_global_ci_proto = out.File
	file_global_ci_proto_goTypes = nil
	file_global_ci_proto_depIdxs = nil
}
