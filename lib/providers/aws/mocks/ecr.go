// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"github.com/aws/aws-sdk-go-v2/service/ecr"
	"sync"
)

// AWSECRClientMock is a mock implementation of aws.AWSECRClient.
//
//	func TestSomethingThatUsesAWSECRClient(t *testing.T) {
//
//		// make and configure a mocked aws.AWSECRClient
//		mockedAWSECRClient := &AWSECRClientMock{
//			CreateRepositoryFunc: func(ctx context.Context, params *ecr.CreateRepositoryInput, optFns ...func(*ecr.Options)) (*ecr.CreateRepositoryOutput, error) {
//				panic("mock out the CreateRepository method")
//			},
//			DescribeRepositoriesFunc: func(ctx context.Context, params *ecr.DescribeRepositoriesInput, optFns ...func(*ecr.Options)) (*ecr.DescribeRepositoriesOutput, error) {
//				panic("mock out the DescribeRepositories method")
//			},
//		}
//
//		// use mockedAWSECRClient in code that requires aws.AWSECRClient
//		// and then make assertions.
//
//	}
type AWSECRClientMock struct {
	// CreateRepositoryFunc mocks the CreateRepository method.
	CreateRepositoryFunc func(ctx context.Context, params *ecr.CreateRepositoryInput, optFns ...func(*ecr.Options)) (*ecr.CreateRepositoryOutput, error)

	// DescribeRepositoriesFunc mocks the DescribeRepositories method.
	DescribeRepositoriesFunc func(ctx context.Context, params *ecr.DescribeRepositoriesInput, optFns ...func(*ecr.Options)) (*ecr.DescribeRepositoriesOutput, error)

	// calls tracks calls to the methods.
	calls struct {
		// CreateRepository holds details about calls to the CreateRepository method.
		CreateRepository []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Params is the params argument value.
			Params *ecr.CreateRepositoryInput
			// OptFns is the optFns argument value.
			OptFns []func(*ecr.Options)
		}
		// DescribeRepositories holds details about calls to the DescribeRepositories method.
		DescribeRepositories []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Params is the params argument value.
			Params *ecr.DescribeRepositoriesInput
			// OptFns is the optFns argument value.
			OptFns []func(*ecr.Options)
		}
	}
	lockCreateRepository     sync.RWMutex
	lockDescribeRepositories sync.RWMutex
}

// CreateRepository calls CreateRepositoryFunc.
func (mock *AWSECRClientMock) CreateRepository(ctx context.Context, params *ecr.CreateRepositoryInput, optFns ...func(*ecr.Options)) (*ecr.CreateRepositoryOutput, error) {
	if mock.CreateRepositoryFunc == nil {
		panic("AWSECRClientMock.CreateRepositoryFunc: method is nil but AWSECRClient.CreateRepository was just called")
	}
	callInfo := struct {
		Ctx    context.Context
		Params *ecr.CreateRepositoryInput
		OptFns []func(*ecr.Options)
	}{
		Ctx:    ctx,
		Params: params,
		OptFns: optFns,
	}
	mock.lockCreateRepository.Lock()
	mock.calls.CreateRepository = append(mock.calls.CreateRepository, callInfo)
	mock.lockCreateRepository.Unlock()
	return mock.CreateRepositoryFunc(ctx, params, optFns...)
}

// CreateRepositoryCalls gets all the calls that were made to CreateRepository.
// Check the length with:
//
//	len(mockedAWSECRClient.CreateRepositoryCalls())
func (mock *AWSECRClientMock) CreateRepositoryCalls() []struct {
	Ctx    context.Context
	Params *ecr.CreateRepositoryInput
	OptFns []func(*ecr.Options)
} {
	var calls []struct {
		Ctx    context.Context
		Params *ecr.CreateRepositoryInput
		OptFns []func(*ecr.Options)
	}
	mock.lockCreateRepository.RLock()
	calls = mock.calls.CreateRepository
	mock.lockCreateRepository.RUnlock()
	return calls
}

// DescribeRepositories calls DescribeRepositoriesFunc.
func (mock *AWSECRClientMock) DescribeRepositories(ctx context.Context, params *ecr.DescribeRepositoriesInput, optFns ...func(*ecr.Options)) (*ecr.DescribeRepositoriesOutput, error) {
	if mock.DescribeRepositoriesFunc == nil {
		panic("AWSECRClientMock.DescribeRepositoriesFunc: method is nil but AWSECRClient.DescribeRepositories was just called")
	}
	callInfo := struct {
		Ctx    context.Context
		Params *ecr.DescribeRepositoriesInput
		OptFns []func(*ecr.Options)
	}{
		Ctx:    ctx,
		Params: params,
		OptFns: optFns,
	}
	mock.lockDescribeRepositories.Lock()
	mock.calls.DescribeRepositories = append(mock.calls.DescribeRepositories, callInfo)
	mock.lockDescribeRepositories.Unlock()
	return mock.DescribeRepositoriesFunc(ctx, params, optFns...)
}

// DescribeRepositoriesCalls gets all the calls that were made to DescribeRepositories.
// Check the length with:
//
//	len(mockedAWSECRClient.DescribeRepositoriesCalls())
func (mock *AWSECRClientMock) DescribeRepositoriesCalls() []struct {
	Ctx    context.Context
	Params *ecr.DescribeRepositoriesInput
	OptFns []func(*ecr.Options)
} {
	var calls []struct {
		Ctx    context.Context
		Params *ecr.DescribeRepositoriesInput
		OptFns []func(*ecr.Options)
	}
	mock.lockDescribeRepositories.RLock()
	calls = mock.calls.DescribeRepositories
	mock.lockDescribeRepositories.RUnlock()
	return calls
}
